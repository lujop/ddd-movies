plugins {
    id "java"
    id "org.sonarqube" version "2.8"
    id "com.diffplug.gradle.spotless" version "3.28.1" apply false
}


allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    java {
        sourceCompatibility = JavaVersion.VERSION_13
        targetCompatibility = JavaVersion.VERSION_13
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }
}

subprojects {
    group 'cat.joanpujol'
    version '1.0.0-SNAPSHOT'

    apply plugin: 'com.diffplug.gradle.spotless'
    compileJava {
        options.encoding = 'UTF-8'
        options.compilerArgs << '-parameters'
    }

    compileTestJava {
        options.encoding = 'UTF-8'
    }

    dependencies {
        implementation group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '4.0.2'
        testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.15.1'
    }

    spotless {
        java {
            googleJavaFormat('1.7')
            removeUnusedImports()

        }
    }
}

//Aggregate report for all projects (needed by Sonarcloud)
task codeCoverageReport(type: JacocoReport) {

    // Gather execution data from all subprojects
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    // Add all relevant sourcesets from the subprojects
    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

// always run the tests before generating the report
codeCoverageReport.dependsOn {
    subprojects*.check
}

sonarqube {
    properties {
        property "sonar.projectKey", "lujop_ddd-movies"
        property "sonar.coverage.jacoco.xmlReportPaths", "${rootDir}/build/reports/jacoco/codeCoverageReport/codeCoverageReport.xml"
    }
}